name: CI
on:
  push:
  pull_request:
jobs:
  build:
    defaults:
      run:
        shell: bash
        working-directory: "/opt/carma/"
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/carma-base:develop
      env:
        INIT_ENV: "/home/carma/.base-image/init-env.sh"
        ROS_2_ENV: "/opt/ros/foxy/setup.bash"
        TERM: xterm
      options: "--user root"
    steps:
    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0
        path: src/${{ github.event.repository.name }}
    - name: Move source code
      run: mv $GITHUB_WORKSPACE/src /opt/carma/
    - name: Checkout dependencies
      run: |
        source "$INIT_ENV"
        source "$ROS_2_ENV"
        git clone -b develop --depth 1 https://github.com/usdot-fhwa-stol/carma-msgs.git src/CARMAMsgs
        apt-get update
        apt-get -y install python3-coverage python3-pip python3-pytest
        pwd && ls -la
    - name: Install requirements
      run: python3 -m pip install -r $GITHUB_WORKSPACE/carma-utils/carma-utils/sensorlib/requirements.txt        
    - name: Run tests
      run: |
        export PYTHONPATH=$PYTHONPATH:/usr/lib/python3/dist-packages
        cd $GITHUB_WORKSPACE/carma-utils/sensorlib/test/
        python3 -m coverage run -m pytest
        python3 -m coverage xml --omit="/opt/*,/root/*,/tmp/*,/usr/*,/var/*,**/__init__.py"    
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: carma-cloud-bridge-coverage
        path: $GITHUB_WORKSPACE/carma-utils/sensorlib/test/coverage.xml
        if-no-files-found: error          
    - name: Build
      run: |
        source "$INIT_ENV"
        source "$ROS_2_ENV" 
        PACKAGES=$(find . -maxdepth 2 -type f -name package.xml | sed 's/\.\///' | cut -d/ -f1)
        sed -i '/colcon build/ s/$/ --parallel-workers 4 --packages-up-to $PACKAGES/' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -m -e /opt/carma/ -o ./coverage_reports/gcov
    - name: Run C++ Tests
      run: |
        source "$INIT_ENV"
        source "$ROS_2_ENV"
        sed -i '/colcon test/ s/$/ --parallel-workers 4 --packages-above $PACKAGES/' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -t -e /opt/carma/ -o ./coverage_reports/gcov
    - name: Run SonarScanner
      uses: usdot-fhwa-stol/actions/sonar-scanner@main
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        working-dir: "/opt/carma/src/${{ github.event.repository.name }}"